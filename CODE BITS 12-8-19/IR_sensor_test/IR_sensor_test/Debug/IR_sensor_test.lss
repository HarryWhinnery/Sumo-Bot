
IR_sensor_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002b4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  00000308  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000338  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003b7b  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000348f  00000000  00000000  00003f43  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000061e  00000000  00000000  000073d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  000079f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000025c4  00000000  00000000  00007a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000096  00000000  00000000  0000a02c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000a0c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
   8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
   c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  10:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  14:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  18:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  1c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  20:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  24:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  28:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  2c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  30:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  34:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  38:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  3c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  40:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  44:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  48:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  4c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  50:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  54:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  58:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  5c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  60:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  64:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  68:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  6c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  70:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  74:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  78:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  7c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  80:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  84:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  88:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  8c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  90:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  94:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  98:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  9c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  a0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  a4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  a8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  ac:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  b0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  b4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  b8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  bc:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  c0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  c4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  c8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  cc:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  d0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  d4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  d8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  dc:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  e0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  e4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  e8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  ec:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  f0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  f4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  f8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  fc:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 100:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 104:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 108:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 10c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 110:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 114:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 118:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 11c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 120:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 124:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 128:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 12c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 130:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 134:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 138:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 13c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 140:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 144:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 148:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 14c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 150:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 154:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 158:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 15c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 160:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 164:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 168:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 16c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 170:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 174:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 178:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 17c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 180:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 184:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 188:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 18c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 190:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 194:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 198:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 19c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1a0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1a4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1a8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1ac:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1b0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1b4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1b8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1bc:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1c0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1c4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1c8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1cc:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1d0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1d4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1d8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1dc:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1e0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1e4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1e8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1ec:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1f0:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1f4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
 1f8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e5       	ldi	r29, 0x5F	; 95
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60

0000020c <__do_copy_data>:
 20c:	10 e2       	ldi	r17, 0x20	; 32
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b0 e2       	ldi	r27, 0x20	; 32
 212:	e4 eb       	ldi	r30, 0xB4	; 180
 214:	f2 e0       	ldi	r31, 0x02	; 2
 216:	00 e0       	ldi	r16, 0x00	; 0
 218:	0b bf       	out	0x3b, r16	; 59
 21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
 21c:	07 90       	elpm	r0, Z+
 21e:	0d 92       	st	X+, r0
 220:	a0 30       	cpi	r26, 0x00	; 0
 222:	b1 07       	cpc	r27, r17
 224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>
 226:	0e 94 37 01 	call	0x26e	; 0x26e <main>
 22a:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <_exit>

0000022e <__bad_interrupt>:
 22e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000232 <_ZN9IR_sensorC1EP11PORT_structh>:


#include "IR_sensor.h"

// default constructor
IR_sensor::IR_sensor(PORT_t* p_port, uint8_t pin):gp_port(p_port),gpin_bm(1<<pin)
 232:	fc 01       	movw	r30, r24
 234:	60 83       	st	Z, r22
 236:	71 83       	std	Z+1, r23	; 0x01
 238:	21 e0       	ldi	r18, 0x01	; 1
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <_ZN9IR_sensorC1EP11PORT_structh+0x10>
 23e:	22 0f       	add	r18, r18
 240:	33 1f       	adc	r19, r19
 242:	4a 95       	dec	r20
 244:	e2 f7       	brpl	.-8      	; 0x23e <_ZN9IR_sensorC1EP11PORT_structh+0xc>
 246:	22 83       	std	Z+2, r18	; 0x02
{
	gp_port->DIR &= ~gpin_bm;
 248:	fb 01       	movw	r30, r22
 24a:	80 81       	ld	r24, Z
 24c:	20 95       	com	r18
 24e:	28 23       	and	r18, r24
 250:	20 83       	st	Z, r18
 252:	08 95       	ret

00000254 <_ZN9IR_sensor4readEv>:


//Read output of IR sensor
bool IR_sensor::read(void)
{
	bool value = gp_port->IN & gpin_bm;
 254:	dc 01       	movw	r26, r24
 256:	ed 91       	ld	r30, X+
 258:	fc 91       	ld	r31, X
 25a:	11 97       	sbiw	r26, 0x01	; 1
 25c:	20 85       	ldd	r18, Z+8	; 0x08
	return value;
 25e:	12 96       	adiw	r26, 0x02	; 2
 260:	8c 91       	ld	r24, X
 262:	92 2f       	mov	r25, r18
 264:	98 23       	and	r25, r24
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	09 f4       	brne	.+2      	; 0x26c <_ZN9IR_sensor4readEv+0x18>
 26a:	80 e0       	ldi	r24, 0x00	; 0
}
 26c:	08 95       	ret

0000026e <main>:
#include "IR_sensor.h"
uint8_t test = 1;


int main(void)
{
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	00 d0       	rcall	.+0      	; 0x274 <main+0x6>
 274:	cd b7       	in	r28, 0x3d	; 61
 276:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	PORTA.DIR |= (1<<4);		//Set PA4 to output (LED)
 278:	e0 e0       	ldi	r30, 0x00	; 0
 27a:	f6 e0       	ldi	r31, 0x06	; 6
 27c:	80 81       	ld	r24, Z
 27e:	80 61       	ori	r24, 0x10	; 16
 280:	80 83       	st	Z, r24

	IR_sensor test_IR_sensor (&PORTA, 5);
 282:	45 e0       	ldi	r20, 0x05	; 5
 284:	60 e0       	ldi	r22, 0x00	; 0
 286:	76 e0       	ldi	r23, 0x06	; 6
 288:	ce 01       	movw	r24, r28
 28a:	01 96       	adiw	r24, 0x01	; 1
 28c:	0e 94 19 01 	call	0x232	; 0x232 <_ZN9IR_sensorC1EP11PORT_structh>
		{
			PORTA.OUT = 0<<0;
		}
		else
		{
			PORTA.OUT = 1<<0;
 290:	00 e0       	ldi	r16, 0x00	; 0
 292:	16 e0       	ldi	r17, 0x06	; 6
 294:	ff 24       	eor	r15, r15
 296:	f3 94       	inc	r15
	IR_sensor test_IR_sensor (&PORTA, 5);
    
	while (1) 
    {
		
		if (test_IR_sensor.read())
 298:	ce 01       	movw	r24, r28
 29a:	01 96       	adiw	r24, 0x01	; 1
 29c:	0e 94 2a 01 	call	0x254	; 0x254 <_ZN9IR_sensor4readEv>
 2a0:	88 23       	and	r24, r24
 2a2:	19 f0       	breq	.+6      	; 0x2aa <main+0x3c>
		{
			PORTA.OUT = 0<<0;
 2a4:	f8 01       	movw	r30, r16
 2a6:	14 82       	std	Z+4, r1	; 0x04
 2a8:	f7 cf       	rjmp	.-18     	; 0x298 <main+0x2a>
		}
		else
		{
			PORTA.OUT = 1<<0;
 2aa:	f8 01       	movw	r30, r16
 2ac:	f4 82       	std	Z+4, r15	; 0x04
 2ae:	f4 cf       	rjmp	.-24     	; 0x298 <main+0x2a>

000002b0 <_exit>:
 2b0:	f8 94       	cli

000002b2 <__stop_program>:
 2b2:	ff cf       	rjmp	.-2      	; 0x2b2 <__stop_program>
